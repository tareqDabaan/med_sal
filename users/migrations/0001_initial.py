# Generated by Django 4.2.6 on 2023-12-09 09:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import users.models_helpers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=128, unique=True)),
                ('phone', models.CharField(max_length=16, unique=True)),
                ('image', models.ImageField(default='defaults/default_profile.jpg', null=True, upload_to=users.models_helpers.get_image_path)),
                ('user_type', models.CharField(choices=[('SERVICE_PROVIDER', 'Service_Provider'), ('SUPER_ADMIN', 'Super_Admin'), ('ADMIN', 'Admin'), ('USER', 'User')], default='USER', max_length=16)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Users',
            },
        ),
        migrations.CreateModel(
            name='EmailChange',
            fields=[
                ('user_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=16, unique=True)),
                ('new_email', models.EmailField(max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='EmailConfirmation',
            fields=[
                ('user_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('ip_address', models.CharField(max_length=32, unique=True)),
                ('email', models.EmailField(max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserIP',
            fields=[
                ('ip_address', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('language_code', models.CharField(max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name='PasswordReset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6, unique=True)),
                ('ip_address', models.CharField(max_length=32, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Admins',
            fields=[
            ],
            options={
                'verbose_name': 'Admins',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.users',),
            managers=[
                ('admins', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='SuperAdmins',
            fields=[
            ],
            options={
                'verbose_name': 'SuperAdmin',
                'verbose_name_plural': 'SuperAdmin',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.users',),
            managers=[
                ('super_admins', django.db.models.manager.Manager()),
            ],
        ),
    ]
